# Blue Team Defender - Security Monitoring & Response
# Real-time threat detection and incident response using HTTP DSL v3

print "╔══════════════════════════════════════════════════════════════╗"
print "║      🔵 BLUE TEAM DEFENDER - SECURITY OPERATIONS CENTER     ║"
print "║      Real-time Threat Detection & Response System            ║"
print "╚══════════════════════════════════════════════════════════════╝"

# SOC Configuration
set $monitoring_endpoint "https://httpbin.org"
set $alert_threshold 3
set $check_interval 1000
set $monitoring_duration 10

# Threat intelligence
set $known_malicious_ips ["192.168.1.100", "10.0.0.50", "172.16.0.25"]
set $suspicious_user_agents ["sqlmap", "nikto", "nmap", "masscan", "burp"]
set $attack_signatures ["<script>", "SELECT * FROM", "../../etc/passwd", "cmd.exe"]

# Security metrics
set $total_requests 0
set $blocked_requests 0
set $suspicious_activities 0
set $critical_alerts 0

print ""
print "[*] SOC Dashboard Initialized"
print "[*] Monitoring endpoint: $monitoring_endpoint"
print "[*] Alert threshold: $alert_threshold suspicious activities"
print ""

# ═══════════════════════════════════════════════════════════
# MODULE 1: REAL-TIME MONITORING
# ═══════════════════════════════════════════════════════════
print "┌─────────────────────────────────────────────────────────┐"
print "│  MODULE 1: REAL-TIME MONITORING                         │"
print "└─────────────────────────────────────────────────────────┘"

print "[*] Starting continuous monitoring..."

set $monitoring_cycles 5
set $current_cycle 1

while $current_cycle <= $monitoring_cycles do
    print ""
    print "[CYCLE $current_cycle/$monitoring_cycles] Analyzing traffic..."
    
    # Simulate incoming request monitoring
    GET "$monitoring_endpoint/anything"
        header "X-Forwarded-For" "192.168.1.100"
        header "User-Agent" "Mozilla/5.0 (normal browser)"
    
    set $total_requests $total_requests + 1
    
    # Check for malicious IPs
    foreach $bad_ip in $known_malicious_ips do
        if $bad_ip == "192.168.1.100" then
            print "  ⚠️ ALERT: Known malicious IP detected: $bad_ip"
            set $suspicious_activities $suspicious_activities + 1
            set $blocked_requests $blocked_requests + 1
        endif
    endloop
    
    # Check user agents
    GET "$monitoring_endpoint/headers"
    extract regex "User-Agent.*?(sqlmap|nikto|scanner)" as $malicious_ua
    
    if $malicious_ua != "" then
        print "  ⚠️ ALERT: Suspicious user agent detected"
        set $suspicious_activities $suspicious_activities + 1
    endif
    
    set $current_cycle $current_cycle + 1
    wait $check_interval ms
endloop

# ═══════════════════════════════════════════════════════════
# MODULE 2: INTRUSION DETECTION
# ═══════════════════════════════════════════════════════════
print ""
print "┌─────────────────────────────────────────────────────────┐"
print "│  MODULE 2: INTRUSION DETECTION SYSTEM                   │"
print "└─────────────────────────────────────────────────────────┘"

print "[*] IDS Engine: Analyzing attack patterns..."

# Simulate log analysis
set $log_entries 20
set $analyzed 0

repeat $log_entries times do
    set $analyzed $analyzed + 1
    
    # Simulate pattern matching
    if $analyzed == 5 then
        print "  [IDS] SQL injection attempt detected in request #$analyzed"
        set $suspicious_activities $suspicious_activities + 1
    endif
    
    if $analyzed == 8 then
        print "  [IDS] XSS payload detected in request #$analyzed"
        set $suspicious_activities $suspicious_activities + 1
    endif
    
    if $analyzed == 15 then
        print "  [IDS] Directory traversal attempt in request #$analyzed"
        set $suspicious_activities $suspicious_activities + 1
    endif
endloop

print "[+] Analyzed $analyzed log entries"

# ═══════════════════════════════════════════════════════════
# MODULE 3: ANOMALY DETECTION
# ═══════════════════════════════════════════════════════════
print ""
print "┌─────────────────────────────────────────────────────────┐"
print "│  MODULE 3: ANOMALY DETECTION                            │"
print "└─────────────────────────────────────────────────────────┘"

# Baseline establishment
set $normal_request_rate 10
set $normal_response_time 200
set $normal_error_rate 2

print "[*] Baseline metrics:"
print "  • Normal request rate: $normal_request_rate req/s"
print "  • Normal response time: $normal_response_time ms"
print "  • Normal error rate: $normal_error_rate%"

# Detect anomalies
set $current_request_rate 50
set $current_response_time 2000
set $current_error_rate 25

print ""
print "[*] Current metrics:"
print "  • Current request rate: $current_request_rate req/s"
print "  • Current response time: $current_response_time ms"
print "  • Current error rate: $current_error_rate%"

# Calculate deviations
if $current_request_rate > $normal_request_rate * 3 then
    print "  🔴 CRITICAL: Possible DDoS attack - request rate 5x normal!"
    set $critical_alerts $critical_alerts + 1
endif

if $current_response_time > $normal_response_time * 5 then
    print "  ⚠️ WARNING: High response time - possible resource exhaustion"
    set $suspicious_activities $suspicious_activities + 1
endif

if $current_error_rate > $normal_error_rate * 10 then
    print "  ⚠️ WARNING: High error rate - possible attack in progress"
    set $suspicious_activities $suspicious_activities + 1
endif

# ═══════════════════════════════════════════════════════════
# MODULE 4: THREAT HUNTING
# ═══════════════════════════════════════════════════════════
print ""
print "┌─────────────────────────────────────────────────────────┐"
print "│  MODULE 4: PROACTIVE THREAT HUNTING                     │"
print "└─────────────────────────────────────────────────────────┘"

print "[*] Hunting for advanced persistent threats (APT)..."

# Check for data exfiltration patterns
set $outbound_data_size 0
set $suspicious_endpoints ["pastebin.com", "file.io", "transfer.sh"]

foreach $endpoint in $suspicious_endpoints do
    # Simulate checking outbound connections
    print "  [HUNT] Checking for connections to: $endpoint"
    
    if $endpoint == "pastebin.com" then
        print "    ⚠️ Suspicious: Data exfiltration endpoint detected!"
        set $suspicious_activities $suspicious_activities + 1
    endif
endloop

# Check for lateral movement
print "  [HUNT] Analyzing authentication patterns..."
set $failed_logins 15
set $different_accounts 8

if $failed_logins > 10 then
    if $different_accounts > 5 then
        print "    ⚠️ Possible password spraying detected!"
        set $suspicious_activities $suspicious_activities + 1
    endif
endif

# Check for persistence mechanisms
print "  [HUNT] Scanning for persistence mechanisms..."
set $scheduled_tasks ["update.exe", "svchost.exe", "chrome_update.exe"]

foreach $task in $scheduled_tasks do
    if $task == "chrome_update.exe" then
        print "    ⚠️ Suspicious scheduled task found: $task"
        set $suspicious_activities $suspicious_activities + 1
    endif
endloop

# ═══════════════════════════════════════════════════════════
# MODULE 5: INCIDENT RESPONSE
# ═══════════════════════════════════════════════════════════
print ""
print "┌─────────────────────────────────────────────────────────┐"
print "│  MODULE 5: AUTOMATED INCIDENT RESPONSE                  │"
print "└─────────────────────────────────────────────────────────┘"

if $suspicious_activities >= $alert_threshold then
    print ""
    print "🚨 SECURITY INCIDENT DETECTED 🚨"
    print "Suspicious activities: $suspicious_activities"
    print ""
    print "[IR] Initiating incident response playbook..."
    
    # Step 1: Containment
    print "  [1/5] CONTAIN: Isolating affected systems..."
    set $isolated_systems 3
    print "    ✓ $isolated_systems systems isolated"
    
    # Step 2: Investigation
    print "  [2/5] INVESTIGATE: Collecting forensic data..."
    set $logs_collected 1024
    print "    ✓ $logs_collected MB of logs collected"
    
    # Step 3: Eradication
    print "  [3/5] ERADICATE: Removing threats..."
    set $threats_removed 2
    print "    ✓ $threats_removed threats neutralized"
    
    # Step 4: Recovery
    print "  [4/5] RECOVER: Restoring systems..."
    print "    ✓ Systems restored from clean backup"
    
    # Step 5: Lessons Learned
    print "  [5/5] DOCUMENT: Creating incident report..."
    print "    ✓ Incident report generated: IR-2024-001"
    
    print ""
    print "[+] Incident response completed successfully"
else
    print "[+] No incidents requiring response"
endif

# ═══════════════════════════════════════════════════════════
# MODULE 6: SECURITY HARDENING VALIDATION
# ═══════════════════════════════════════════════════════════
print ""
print "┌─────────────────────────────────────────────────────────┐"
print "│  MODULE 6: SECURITY HARDENING VALIDATION                │"
print "└─────────────────────────────────────────────────────────┘"

print "[*] Validating security controls..."

# Check security headers
GET "$monitoring_endpoint/response-headers?X-Frame-Options=DENY&X-Content-Type-Options=nosniff"
extract regex "X-Frame-Options" as $xframe
extract regex "X-Content-Type-Options" as $xcontent

set $security_score 0

if $xframe != "" then
    print "  ✓ X-Frame-Options: CONFIGURED"
    set $security_score $security_score + 20
else
    print "  ✗ X-Frame-Options: MISSING"
endif

if $xcontent != "" then
    print "  ✓ X-Content-Type-Options: CONFIGURED"
    set $security_score $security_score + 20
else
    print "  ✗ X-Content-Type-Options: MISSING"
endif

# Additional hardening checks
print "  ✓ HTTPS Enforcement: ENABLED"
set $security_score $security_score + 20
print "  ✓ Rate Limiting: ACTIVE"
set $security_score $security_score + 20
print "  ✓ WAF Protection: ONLINE"
set $security_score $security_score + 20

print ""
print "[*] Security Hardening Score: $security_score/100"

# ═══════════════════════════════════════════════════════════
# FINAL SECURITY DASHBOARD
# ═══════════════════════════════════════════════════════════
print ""
print "╔══════════════════════════════════════════════════════════════╗"
print "║                 SECURITY OPERATIONS DASHBOARD                ║"
print "╚══════════════════════════════════════════════════════════════╝"

print ""
print "📊 SECURITY METRICS:"
print "───────────────────────"
print "Total Requests Analyzed:     $total_requests"
print "Blocked Requests:            $blocked_requests"
print "Suspicious Activities:       $suspicious_activities"
print "Critical Alerts:            $critical_alerts"

# Calculate threat level
set $threat_level "LOW"
if $suspicious_activities > 5 then
    set $threat_level "MEDIUM"
endif
if $suspicious_activities > 10 then
    set $threat_level "HIGH"
endif
if $critical_alerts > 0 then
    set $threat_level "CRITICAL"
endif

print ""
print "🎯 THREAT LEVEL: $threat_level"

if $threat_level == "CRITICAL" then
    print "    🔴🔴🔴 IMMEDIATE ACTION REQUIRED 🔴🔴🔴"
else
    if $threat_level == "HIGH" then
        print "    🟠🟠 ELEVATED THREAT - MONITOR CLOSELY 🟠🟠"
    else
        if $threat_level == "MEDIUM" then
            print "    🟡 MODERATE THREAT - STAY VIGILANT 🟡"
        else
            print "    🟢 NORMAL OPERATIONS 🟢"
        endif
    endif
endif

print ""
print "🛡️ DEFENSIVE RECOMMENDATIONS:"
print "1. Enable enhanced monitoring for next 24 hours"
print "2. Review and update firewall rules"
print "3. Increase log retention period"
print "4. Schedule security awareness training"
print "5. Conduct tabletop exercise this quarter"

print ""
print "📈 COMPLIANCE & REPORTING:"
print "• SOC 2 Type II: COMPLIANT"
print "• ISO 27001: COMPLIANT"
print "• NIST CSF: IMPLEMENTED"
print "• GDPR: ENFORCED"

print ""
print "🔄 NEXT ACTIONS:"
print "• Threat intelligence feed update in 6 hours"
print "• Vulnerability scan scheduled for tonight"
print "• Security patch review tomorrow"
print "• Incident response drill next week"

print ""
print "[*] Blue Team monitoring session completed"
print "[*] Dashboard data exported to: soc_report_[TIMESTAMP].json"
print ""
print "═══════════════════════════════════════════════════════════════"
print "        Stay vigilant. Stay secure. Defend the network!"
print "═══════════════════════════════════════════════════════════════"